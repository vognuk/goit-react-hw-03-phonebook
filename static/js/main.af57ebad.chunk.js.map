{"version":3,"sources":["components/Notification/Notification.module.css","components/Form/Form.module.css","components/Form/index.jsx","components/Contacts/index.jsx","components/Filter/index.jsx","App.js","index.js","components/Contacts/Contacts.module.css","components/Filter/Filter.module.css"],"names":["module","exports","Form","state","name","number","handleChange","target","value","setState","handleSubmit","e","preventDefault","props","onSubmit","reset","this","addContact","className","s","title","form","label","input","type","placeholder","onChange","button","disabled","Component","Contacts","contacts","onDelete","children","list","map","el","item","onClick","id","uuidv4","Filter","App","filter","checkContact","some","alert","contactData","prevState","deleteContact","filterContacts","getVisibleContacts","normalizedFilter","toLowerCase","includes","localStorage","getItem","parsedContacts","JSON","parse","nowContacts","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.af57ebad.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__m8QBw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Form_title__3nqQa\",\"form\":\"Form_form__3CxvY\",\"label\":\"Form_label__2l2fB\",\"input\":\"Form_input__SuEyq\",\"button\":\"Form_button__2Oswp\"};","import React, { Component } from 'react'\r\nimport s from './Form.module.css'\r\nimport PropTypes from 'prop-types'\r\n\r\nclass Form extends Component {\r\n  static propTypes = {\r\n    name: PropTypes.string,\r\n    number: PropTypes.string,\r\n    contacts: PropTypes.arrayOf(\r\n      PropTypes.exact({\r\n        id: PropTypes.string.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        number: PropTypes.string.isRequired,\r\n      })\r\n    ),\r\n    onChange: PropTypes.func,\r\n    onSubmit: PropTypes.func.isRequired,\r\n    disabled: PropTypes.bool,\r\n  };\r\n\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = ({ target }) => {\r\n    const { name, value } = target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    const { name, number } = this.state;\r\n    e.preventDefault();\r\n    this.props.onSubmit(name, number);\r\n    this.reset();\r\n  };\r\n\r\n  reset() {\r\n    this.setState({ name: '', number: '' });\r\n  }\r\n\r\n  render() {\r\n    const { addContact } = this.props;\r\n    const { name, number } = this.state;\r\n    return (\r\n      <div>\r\n        <h1 className={s.title}>Phonebook</h1>\r\n        <form className={s.form} onSubmit={this.handleSubmit}>\r\n          <label className={s.label}>\r\n            Name\r\n            <input\r\n              className={s.input}\r\n              type='text'\r\n              name='name'\r\n              placeholder='Enter the name'\r\n              value={name}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n          <label className={s.label}>\r\n            Number\r\n            <input\r\n              className={s.input}\r\n              type='number'\r\n              name='number'\r\n              placeholder='Enter the phone number'\r\n              value={number}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n          <button className={s.button} onSubmit={addContact} disabled={false}>\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import React from 'react'\r\nimport s from './Contacts.module.css'\r\nimport { v4 as uuidv4 } from 'uuid'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Contacts = ({ contacts, onDelete, children }) => {\r\n  return (\r\n    <div>\r\n      <ul className={s.list}>\r\n        {contacts.map((el) => (\r\n          <li className={s.item} key={uuidv4()}>\r\n            {`${el.name}: ${el.number}`}\r\n            <button\r\n              className={s.button}\r\n              onClick={() => {\r\n                onDelete(el.id);\r\n              }}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nContacts.propTypes = {\r\n  onDelete: PropTypes.func.isRequired,\r\n  children: PropTypes.element.isRequired,\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n};\r\n\r\nexport default Contacts;\r\n","import React from 'react';\r\nimport s from './Filter.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n  return (\r\n    <label className={s.label}>\r\n      Find contacts by name\r\n      <input\r\n        className={s.input}\r\n        type='text'\r\n        name='filter'\r\n        placeholder='Find contacts by name'\r\n        value={value}\r\n        onChange={onChange}\r\n      ></input>\r\n    </label>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  onChange: PropTypes.func.isRequired,\r\n  name: PropTypes.string,\r\n};\r\n\r\nexport default Filter;\r\n","import React, { Component } from 'react'\r\nimport { v4 as uuidv4 } from 'uuid'\r\nimport Form from './components/Form'\r\nimport Contacts from './components/Contacts'\r\nimport Filter from './components/Filter'\r\nimport Notification from './components/Notification'\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    contacts: [],\r\n    filter: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    const contacts = localStorage.getItem('contacts');\r\n    const parsedContacts = JSON.parse(contacts);\r\n    if (parsedContacts) this.setState({ contacts: parsedContacts });\r\n  }\r\n\r\n  componentDidUpdate(prevState) {\r\n    const { contacts: nowContacts } = this.state;\r\n    const { contacts: prevContacts } = prevState;\r\n    if (nowContacts !== prevContacts) {\r\n      localStorage.setItem('contacts', JSON.stringify(nowContacts));\r\n    }\r\n  }\r\n\r\n  checkContact = (name, number) => {\r\n    const { contacts } = this.state;\r\n    const checkedContacts = contacts.some((el) => el.name === name);\r\n    if (checkedContacts) {\r\n      return alert('This contact is already in your contacts');\r\n    }\r\n    this.addContact(name, number);\r\n  };\r\n\r\n  addContact = (name, number) => {\r\n    const contactData = {\r\n      id: uuidv4(),\r\n      name: name,\r\n      number: number,\r\n    };\r\n    this.setState((prevState) => ({\r\n      contacts: [contactData, ...prevState.contacts],\r\n    }));\r\n  };\r\n\r\n  deleteContact = id => {\r\n    this.setState((prevState) => ({\r\n      contacts: prevState.contacts.filter((el) => el.id !== id),\r\n    }));\r\n  };\r\n\r\n  filterContacts = e => {\r\n    this.setState({ filter: e.target.value });\r\n  };\r\n\r\n  getVisibleContacts = () => {\r\n    const { filter, contacts } = this.state;\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return contacts.filter((el) =>\r\n      el.name.toLowerCase().includes(normalizedFilter)\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { contacts, name, filter, number } = this.state;\r\n\r\n    return (\r\n      <div className='container'>\r\n        <Form\r\n          name={name}\r\n          number={number}\r\n          contacts={contacts}\r\n          onChange={this.handleChange}\r\n          onSubmit={this.checkContact}\r\n        ></Form>\r\n\r\n        <Filter value={filter} onChange={this.filterContacts} />\r\n        <Contacts\r\n          contacts={this.getVisibleContacts()}\r\n          onDelete={this.deleteContact}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Contacts_list__NstO9\",\"item\":\"Contacts_item__10a9W\",\"button\":\"Contacts_button__26y07\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__2UHLK\"};"],"sourceRoot":""}